package ArchmageRobe
import RecipeItem
import CooldownGroups
import TooltipFactory
import MapIcons
import MantleOfProtection
import RingOfSpellLifesteal
import CustomStatSystem
import ManaShieldBuff
import ClosureEvents
import ChannelAbilityPreset

constant MANA_SHIELD_ID = compiletime(ABIL_ID_GEN.next())
constant MANA_SHIELD_ABSORB_PER_MANA = 1
constant MANA_SHIELD_DURATION = 15
constant MANA_COST = 250
constant COOLDOWN = 30

constant SPELL_LIFESTEAL_VALUE = 20.

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Mana Shield", 
  "applies a mana shield on target, which durability is equal to caster's current mana before mana cost substraction * {0}. ".format(MANA_SHIELD_ABSORB_PER_MANA.color(COLOR_GOLD_STR))
    + getDurationString(MANA_SHIELD_DURATION),
    COOLDOWN, MANA_COST)

public constant ARCHMAGE_ROBE_ITEM = compiletime(new RecipeItem()
..setName("Archmage Robe")
..setInterfaceIcon(MapIcons.bTNSuperiorMageRobe)
..setActivelyUsed(true)
..addBonus(Bonus.ARMOR, 6)
..addBonus(Bonus.MANA, 650)
..addBonus(Bonus.MANAREGEN, 3.5)
..addBonus(Bonus.INTELLIGENCE, 20)
..addCustomStat(CustomUnitStats.SPELL_LIFESTEAL, SPELL_LIFESTEAL_VALUE)
..setAbilities(commaList(MANA_SHIELD_ID))
..setCooldownGroup(MANA_SHIELD_COOLDOWN_GROUP_ID.toRawCode())
..generateTooltip(ABIL_TOOLTIP)
)..register()

public constant ARCHMAGE_ROBE_RECIPE = new ItemRecipe()
..gold(935)
..setRequiredItems(RING_OF_SPELL_LIFESTEAL_ITEM, MANTLE_OF_PROTECTION_ITEM)
..setResultItem(ARCHMAGE_ROBE_ITEM)

init
  EventListener.onTargetCast(MANA_SHIELD_ID) (unit caster, unit target) ->
    new ManaShieldBuff(MANA_SHIELD_DURATION.toReal(), caster.getMana() * MANA_SHIELD_ABSORB_PER_MANA).apply(target)

@compiletime function genItemAbils()
  new ChannelAbilityPreset(MANA_SHIELD_ID, 1, true)
  ..presetTargetTypes(Targettype.UNIT)
  ..setManaCost(1, MANA_COST)
  ..setCooldown(1, COOLDOWN.toReal())
