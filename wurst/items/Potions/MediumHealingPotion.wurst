package MediumHealingPotion
import ItemObjEditing
import RecipeItem
import ClosureEvents
import TooltipFactory
import MapIcons
import CustomHeal
import CooldownGroups
import ChannelAbilityPreset
import Abilities

constant HEAL_ID = compiletime(ABIL_ID_GEN.next())
constant FLAT_HEAL = 800
constant PERC_HEAL = 40
constant COOLDOWN = 15

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Heal", 
  "Heals "+ FLAT_HEAL.color(COLOR_GOLD_STR) +" or "+ PERC_HEAL.colorPerc(COLOR_GOLD_STR) +" hp, depending on which value is bigger.",
  COOLDOWN)

public constant M_HEALING_POT_ITEM = compiletime(new RecipeItem()
  ..setName("Medium Healing Potion")
  ..setInterfaceIcon(MapIcons.bTNMediumHealingPotion)
  ..setGoldCost(60)
  ..setNumberofCharges(1)
  ..setMaxStack(5)
  ..setActivelyUsed(true)
  ..setPerishable(true)
  ..setAbilities(HEAL_ID.toRawCode())
  ..setCooldownGroup(HEALING_COOLDOWN_GROUP_ID.toRawCode())
  ..generateTooltip(ABIL_TOOLTIP)
)..register()

init 
  EventListener.onCast(HEAL_ID) (unit caster) ->
    let percHeal = caster.getMaxHP() * PERC_HEAL/100
    
    if FLAT_HEAL > percHeal
      neutralHeal(caster, FLAT_HEAL.toReal())
    else
      neutralHeal(caster, percHeal)

@compiletime function genItemAbils()
  new ChannelAbilityPreset(HEAL_ID, 1, true)
  ..setArtCaster(Abilities.aIheTarget)
  ..presetCooldown(lvl -> COOLDOWN.toReal())

