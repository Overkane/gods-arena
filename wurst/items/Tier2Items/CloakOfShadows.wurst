package CloakOfShadows
import MapIcons
import RecipeItem
import AbilityObjEditing
import ObjectIdGenerator
import ObjectIds
import TooltipFactory
import CustomStatSystem
import NinjaCloak
import PhaseBoots

constant BONUS_SPEED_ID = compiletime(ABIL_ID_GEN.next())
constant MS_BONUS = 55

constant PHASE_STEP_ID = compiletime(ABIL_ID_GEN.next())
constant PHASE_STEP_DURATION = 5

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Phase Step", 
  "allows owner to walk through other units. "
    + getDurationString(PHASE_STEP_DURATION))

public constant CLOAK_OF_SHADOWS_ITEM = compiletime(new RecipeItem()
..setName("Cloak of Shadows")
..setInterfaceIcon(MapIcons.bTNCloakOfShadows)
..setActivelyUsed(true)
..addBonus(Bonus.DAMAGE, 15)
..addBonus(Bonus.ATTACKSPEED, 10)
..addBonus(Bonus.LIFE, 300)
..addBonus(Bonus.AGILITY, 15)
..setAbilities(commaList(PHASE_STEP_ID, BONUS_SPEED_ID))
..addCustomStat(CustomUnitStats.EVASION, 15)
..generateTooltip(ABIL_TOOLTIP)
)..register()

public constant CLOAK_OF_SHADOWS_RECIPE = new ItemRecipe()
..gold(425)
..setRequiredItems(NINJA_CLOAK_ITEM, PHASE_BOOTS_ITEM)
..setResultItem(CLOAK_OF_SHADOWS_ITEM)

@compiletime function genItemAbils()
  new AbilityDefinitionMoveSpeedBonus(BONUS_SPEED_ID)
  ..setMovementSpeedBonus(1, MS_BONUS)

  new AbilityDefinitionWindWalk(PHASE_STEP_ID)
  ..setTransitionTime(1, 5)
  ..setMovementSpeedIncrease(1, 0)
  ..setBackstabDamage(1, false)
  ..setDurationHero(1, PHASE_STEP_DURATION.toReal())
  ..setDurationNormal(1, PHASE_STEP_DURATION.toReal())
  ..setManaCost(1, 25)
  ..setCooldown(1, 18)
