package CloakOfShadows
import MapIcons
import RecipeItem
import AbilityObjEditing
import ObjectIdGenerator
import ObjectIds
import NinjaCloak
import AssassinsBlade
import TooltipFactory
import CustomStatSystem

constant EVASION_CHANCE = 15.

constant PHASE_STEP_ID = compiletime(ABIL_ID_GEN.next())
constant PHASE_STEP_DURATION = 5

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Phase Step", 
  "allows owner to walk through other units. Lasts " + PHASE_STEP_DURATION.color(COLOR_GOLD_STR) + " seconds.")

public constant CLOAK_OF_SHADOWS_ITEM = compiletime(new RecipeItem()
..setName("Cloak of Shadows")
..setInterfaceIcon(MapIcons.bTNCloakOfShadows)
..setActivelyUsed(true)
..addBonus(Bonus.DAMAGE, 25)
..addBonus(Bonus.AGILITY, 25)
..addBonus(Bonus.LIFE, 300)
..setAbilities(commaList(PHASE_STEP_ID))
..addCustomStat(CustomUnitStats.EVASION, EVASION_CHANCE)
..generateTooltip(ABIL_TOOLTIP)
)..register()

public constant CLOAK_OF_SHADOWS_RECIPE = new ItemRecipe()
..gold(170)
..setRequiredItems(NINJA_CLOAK_ITEM, ASSASSINS_BLADE_ITEM)
..setResultItem(CLOAK_OF_SHADOWS_ITEM)

@compiletime function genItemAbils()
  new AbilityDefinitionWindWalk(PHASE_STEP_ID)
  ..setTransitionTime(1, 5)
  ..setMovementSpeedIncrease(1, 0)
  ..setBackstabDamage(1, false)
  ..setDurationHero(1, PHASE_STEP_DURATION.toReal())
  ..setDurationNormal(1, PHASE_STEP_DURATION.toReal())
  ..setManaCost(1, 25)
  ..setCooldown(1, 18)
