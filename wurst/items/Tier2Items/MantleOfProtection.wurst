package MantleOfProtection
import RecipeItem
import RobeOfTheMage
import RingOfProtection
import TooltipFactory
import CooldownGroups
import ChannelAbilityPreset
import ClosureEvents
import ManaShieldBuff

constant MANA_SHIELD_ID = compiletime(ABIL_ID_GEN.next())
constant MANA_SHIELD_ABSORB_PER_MANA = 1
constant MANA_SHIELD_DURATION = 15
constant MANA_COST = 175
constant COOLDOWN = 60

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Mana Shield", 
  "applies a mana shield on caster, which durability is equal to caster's current mana before mana cost substraction * {0}. ".format(MANA_SHIELD_ABSORB_PER_MANA.color(COLOR_GOLD_STR))
    + getDurationString(MANA_SHIELD_DURATION),
    COOLDOWN, MANA_COST)

public constant MANTLE_OF_PROTECTION_ITEM = compiletime(new RecipeItem()
..setName("Mantle of Protection")
..setInterfaceIcon(Icons.bTNMantleOfIntelligence)
..setActivelyUsed(true)
..addBonus(Bonus.ARMOR, 3)
..addBonus(Bonus.MANA, 400)
..addBonus(Bonus.MANAREGEN, 2)
..setAbilities(commaList(MANA_SHIELD_ID))
..setCooldownGroup(MANA_SHIELD_COOLDOWN_GROUP_ID.toRawCode())
..generateTooltip(ABIL_TOOLTIP)
)..register()

public constant MANTLE_OF_PROTECTION_RECIPE = new ItemRecipe()
..gold(480)
..setRequiredItems(ROBE_OF_THE_MAGE_ITEM, RING_OF_PROTECTION_ITEM)
..setResultItem(MANTLE_OF_PROTECTION_ITEM)

init
  EventListener.onCast(MANA_SHIELD_ID) (unit caster) ->
    new ManaShieldBuff(MANA_SHIELD_DURATION.toReal(), caster.getMana() * MANA_SHIELD_ABSORB_PER_MANA).apply(caster)

@compiletime function genItemAbils()
  new ChannelAbilityPreset(MANA_SHIELD_ID, 1, true)
  ..setManaCost(1, MANA_COST)
  ..setCooldown(1, COOLDOWN.toReal())
