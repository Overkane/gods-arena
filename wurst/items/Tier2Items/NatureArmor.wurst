package NatureArmor
import RecipeItem
import TooltipFactory
import MapIcons
import ChannelAbilityPreset
import ClosureEvents
import DummyStatCaster
import ClosureForGroups
import OrderIds
import GameConstants
import GeneralFunctions
import CustomStatSystem
import HeartAmulet
import RingOfRecovery
import FoliantOfWizardry
import BeltOfStrength

constant MASS_ENTANGLE_ID = compiletime(ABIL_ID_GEN.next())
constant MASS_ENTANGLE_DAMAGE_PER_SEC = 150.
constant MASS_ENTANGLE_DURATION = 3.
constant MASS_ENTANGLE_AOE = 300.
constant MASS_ENTANGLE_MANA_COST = 125
constant MASS_ENTANGLE_COOLDOWN = 70

constant ENTANGLE_ID = compiletime(ABIL_ID_GEN.next())

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Mass Entangle", 
  "entangles all enemies in {0} radius from the owner, dealing {1} damage per second. ".format(
      MASS_ENTANGLE_AOE.round().color(COLOR_GOLD_STR), MASS_ENTANGLE_DAMAGE_PER_SEC.color(COLOR_GOLD_STR)
    )
    + getDurationString(MASS_ENTANGLE_DURATION.round()),
    MASS_ENTANGLE_COOLDOWN, MASS_ENTANGLE_MANA_COST)

public constant NATURE_ARMOR_ITEM = compiletime(new RecipeItem()
..setName("Nature Armor")
..setInterfaceIcon(MapIcons.bTNNatureArmor)
..setActivelyUsed(true)
..addBonus(Bonus.STRENGTH, 15)
..addBonus(Bonus.INTELLIGENCE, 15)
..addCustomStat(CustomUnitStats.ATTACK_POWER, 15)
..addCustomStat(CustomUnitStats.SPELL_POWER, 15)
..addBonus(Bonus.LIFE, 1000)
..addBonus(Bonus.LIFEREGEN, 15)
..setAbilities(commaList(MASS_ENTANGLE_ID))
..setCooldownGroup(MASS_ENTANGLE_ID.toRawCode())
..generateTooltip(ABIL_TOOLTIP)
)..register()

public constant NATURE_ARMOR_RECIPE = new ItemRecipe()
..gold(1025)
..setRequiredItems(HEART_AMULET_ITEM, RING_OF_RECOVERY_ITEM, BELT_OF_STRENGTH_ITEM, FOLIANT_OF_WIZ_ITEM)
..setResultItem(NATURE_ARMOR_ITEM)

init
  EventListener.onCast(MASS_ENTANGLE_ID) (unit caster) ->
    forUnitsInRange(caster.getPos(), MASS_ENTANGLE_AOE) (unit u) ->
      if u.isValidCreepTarget()
        new DummyStatCaster()
        ..caster(caster)
        ..castTarget(ENTANGLE_ID, 1, OrderIds.entanglingroots, u)

@compiletime function gen()
  new ChannelAbilityPreset(MASS_ENTANGLE_ID, 1, true)
  ..setManaCost(1, MASS_ENTANGLE_MANA_COST)
  ..setCooldown(1, MASS_ENTANGLE_COOLDOWN.toReal())

  new AbilityDefinitionEntanglingRootscreep(ENTANGLE_ID)
  ..setLevels(1)
  ..setDummyAbility()
  ..setDamageperSecond(1, MASS_ENTANGLE_DAMAGE_PER_SEC)
  ..setDurationNormal(1, MASS_ENTANGLE_DURATION)
  ..setDurationHero(1, getHeroStunDuration(MASS_ENTANGLE_DURATION))
