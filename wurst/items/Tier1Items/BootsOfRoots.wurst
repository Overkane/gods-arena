package BootsOfRoots
import RecipeItem
import TooltipFactory
import MapIcons
import ChannelAbilityPreset
import ClosureEvents
import BootsOfRootsBuff
import BootsOfSpeed
import VitalityStone
import RingOfRegeneration

constant BONUS_SPEED_ID = compiletime(ABIL_ID_GEN.next())
constant MS_BONUS = 25

constant ROOT_ID = compiletime(ABIL_ID_GEN.next())
constant ROOT_LIFEREGEN = 40.
constant ROOT_DURATION = 5.

constant ABIL_TOOLTIP = itemAbilityTooltip(AbilityType.ACTIVE,
  "Root", 
  "on activated roots caster to the ground and increases they hp regeneration by " + ROOT_LIFEREGEN.round().color(COLOR_GOLD_STR) + "."
  + " Lasts " + ROOT_DURATION.round().color(COLOR_GOLD_STR) + " seconds.")

public constant BOOTS_OF_ROOTS_ITEM = compiletime(new RecipeItem()
..setName("Boots of Roots")
..setInterfaceIcon(MapIcons.bTNBarbedTrapv3)
..setActivelyUsed(true)
..addBonus(Bonus.LIFE, 200)
..addBonus(Bonus.LIFEREGEN, 3)
..setAbilities(commaList(ROOT_ID, BONUS_SPEED_ID))
..generateTooltip(("+" + MS_BONUS.toString()).color(COLOR_GOLD_STR) + " Movespeed".color(UTILITY_COLOR) + "\n\n" + ABIL_TOOLTIP)
)..register()

public constant BOOTS_OF_ROOTS_RECIPE = new ItemRecipe()
..gold(95)
..setRequiredItems(VITALITY_STONE_ITEM, RING_OF_REGENERATION_ITEM, BOOTS_OF_SPEED_ITEM)
..setResultItem(BOOTS_OF_ROOTS_ITEM)

init
  EventListener.onCast(ROOT_ID) (unit caster) ->
    new BootsOfRootsBuff(ROOT_DURATION, ROOT_LIFEREGEN).apply(caster)

@compiletime function gen()
  new ChannelAbilityPreset(ROOT_ID, 1, true)
  ..setManaCost(1, 50)
  ..setCooldown(1, 40)

  new AbilityDefinitionMoveSpeedBonus(BONUS_SPEED_ID)
  ..setMovementSpeedBonus(1, MS_BONUS)
