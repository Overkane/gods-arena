package GodOfNatureStrong
import Entity
import GameConstants
import Boss
import AbilityTooltipGenerator
import ClosureTimers
import OrderIds
import BonusHandler
import PlayerData
import ClosureForGroups
import Assets
import SoundUtils
import InstantDummyCaster

constant ROOTS_ID = compiletime(ABIL_ID_GEN.next())
constant WISP_HEAL_ID = compiletime(ABIL_ID_GEN.next())
constant WISP_HEAL_DEF = compiletime(new ChannelAbilityPreset(WISP_HEAL_ID, 1, true)
  ..setDummyAbility()
  ..presetTargetTypes(Targettype.UNIT)
  ..setCastRange(1, 50)
)

constant GOD_OF_NATURE_ID = compiletime(UNIT_ID_GEN.next())
constant WISP_ID = compiletime(UNIT_ID_GEN.next())
constant TREANT_ID = compiletime(UNIT_ID_GEN.next())
vec2 array WISP_SPAWN_POINTS = [gg_rct_ArenaPond.getRightTop(), gg_rct_ArenaPond.getLeftTop(), gg_rct_ArenaPond.getLeftBot(), gg_rct_ArenaPond.getRightBot()]

constant BOSS_MUSIC_THEME = new SoundDefinition(Sounds.doom)

public class GodOfNatureStrong extends Boss
  let castQueue = new LinkedList<int>

  construct(vec3 pos, angle ang)
    super(GOD_OF_NATURE_ID, pos, ang)
    BOSS_MUSIC_THEME.play()
    new SoundDefinition(Sounds.o05Cenarius27).play()
    doPeriodically(5) cb ->
      if actor.isAlive()
        castBossSpell()
      else
        destroy cb

    EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH) () ->
      forUnitsAll() (unit u) ->
        if u.getTypeId() == WISP_ID or u.getTypeId() == TREANT_ID
          u.kill()
      BOSS_MUSIC_THEME.play(0, 0)


  function castBossSpell()
    if castQueue.isEmpty()
      for i = 0 to 3
        castQueue.add(i)
      castQueue.shuffle()
    actor.setAnimation("cast")
    let rand = castQueue.pop()
    switch rand
      case 0
        summonTreants()
      case 1
        entangleRoots()
      case 2
        summonWisps()

  function summonTreants()
    for i = 0 to 8
      let u = createUnit(ENEMY_PLAYER, TREANT_ID, gg_rct_ArenaPond.randomPoint(), angle(GetRandomReal(0, 359)))
      doPeriodicallyCounted(1.5, 10) (CallbackCounted cb) ->
        u..addBonus(Bonus.LIFE, 75)
        ..addBonus(Bonus.DAMAGE, 50)
        ..setMoveSpeed(u.getMoveSpeed() - 34.5)
        ..setScale(2 - 0.1 * cb.getCount())

  function summonWisps()
    for i = 0 to GetRandomInt(3, 5)
      let u = createUnit(ENEMY_PLAYER, WISP_ID, WISP_SPAWN_POINTS[i], angle(0))
      u.issueTargetOrder(WISP_HEAL_DEF.getOrderString(), actor)

  function entangleRoots()
    pData.forEach() (player key, PlayerData value) ->
      if value.getHero().have
        let heroPos = value.getHero().hero.getPos().toVec2()
        let targetCircle = addEffect(Buildings.circleOfPower1, heroPos)

        doAfter(1.5) ->
          targetCircle.destr()
          forUnitsInRange(heroPos, 160) (unit u) ->
            if u.isEnemyOf(ENEMY_PLAYER) and not u.isIllusion()
              InstantDummyCaster.castTarget(ENEMY_PLAYER, ROOTS_ID, 1, OrderIds.entanglingroots, u)

init
  EventListener.onTargetCast(WISP_HEAL_ID) (unit caster, unit target) ->
    target.setHP(target.getHP() + target.getMaxHP() * 0.2)
    target.addBonus(Bonus.DAMAGE, 50)
    flashEffect(Abilities.healTarget, target.getPos())
    caster.kill()

@compiletime function genAbility()
  new UnitDefinition(WISP_ID, UnitIds.wisp)
  ..setHitPointsMaximumBase(2500)
  ..setArmorType(ArmorType.Unarmored)
  ..setSpeedBase(205)
  ..setMovementType(MovementType.Fly)
  ..setNormalAbilities(WISP_HEAL_ID.toRawCode())

  new UnitDefinition(TREANT_ID, UnitIds.forceofnature)
  ..setAcquisitionRange(99999)
  ..setAttack1DamageBase(100)
  ..setDefenseBase(1)
  ..setSpeedBase(350)
  ..setHitPointsMaximumBase(750)

  new UnitDefinition(GOD_OF_NATURE_ID, UnitIds.keeperofthegroveghost)
  ..setAcquisitionRange(99999)
  ..setName("God of Nature")
  ..setAttack1DamageBase(300)
  ..setDefenseBase(20)
  ..setHitPointsMaximumBase(100000)
  ..setScalingValue(2.6)

  new AbilityDefinitionKeeperoftheGroveEntanglingRoots(ROOTS_ID)
  ..setDummyAbility()
  ..setDamageperSecond(1, 450)
  ..setDurationHero(5, 4.5)
  ..setDurationNormal(5, 4.5)
