package GodOfNature
import GameConstants
import Boss
import AbilityTooltipGenerator
import ClosureTimers
import OrderIds
import BonusHandler
import ClosureForGroups
import Assets
import SoundUtils
import InstantDummyCaster
import Projectile
import HornOfTheGod
import Hero
import DummyDamage
import Creep

constant ROOTS_ID = compiletime(ABIL_ID_GEN.next())
constant WISP_HEAL_ID = compiletime(ABIL_ID_GEN.next())
constant WISP_HEAL_DEF = compiletime(new ChannelAbilityPreset(WISP_HEAL_ID, 1, true)
  ..setDummyAbility()
  ..presetTargetTypes(Targettype.UNIT)
  ..setCastRange(1, 50)
)

constant GOD_OF_NATURE_ID = compiletime(UNIT_ID_GEN.next())
constant WISP_ID = compiletime(UNIT_ID_GEN.next())
constant TREANT_ID = compiletime(UNIT_ID_GEN.next())
vec2 array WISP_SPAWN_POINTS = [gg_rct_ArenaForest.getRightTop(), gg_rct_ArenaForest.getLeftTop(), gg_rct_ArenaForest.getLeftBot(), gg_rct_ArenaForest.getRightBot()]
vec2 array ROOTS_PROJECTILES_SPAWN_POINTS = [gg_rct_ArenaForest.getRightTop(), gg_rct_ArenaForest.getLeftTop(), gg_rct_ArenaForest.getLeftBot(), gg_rct_ArenaForest.getRightBot()]

constant BOSS_MUSIC_THEME = new SoundDefinition(Sounds.doom)

public class GodOfNature extends Boss
  let castQueue = new LinkedList<int>

  construct(vec3 pos, angle ang)
    super(GOD_OF_NATURE_ID, pos, ang)
    actor.addItemById(HORN_OF_THE_GOD_ITEM.getNewId())
    BOSS_MUSIC_THEME.play()
    new SoundDefinition(Sounds.o05Cenarius29).play()
    doPeriodically(6) cb ->
      if actor.isAlive()
        castBossSpell()
      else
        destroy cb

    EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH) () ->
      forUnitsAll() (unit u) ->
        if u.getTypeId() == WISP_ID or u.getTypeId() == TREANT_ID
          u.kill()
      BOSS_MUSIC_THEME.play(0, 0)

  function castBossSpell()
    if castQueue.isEmpty()
      for i = 0 to 2
        castQueue.add(i)
      castQueue.shuffle()
    actor.setAnimation("cast")
    let rand = castQueue.pop()
    switch rand
      case 0
        summonTreants()
      case 1
        entangleRoots()
      case 2
        summonWisps()

  function summonTreants()
    for i = 0 to 5
      let u = new Creep(TREANT_ID, gg_rct_ArenaForest.randomPoint().toVec3(), angle(GetRandomReal(0, 359))).actor
      flashEffect(Abilities.howlTarget, u.getPos())
      doPeriodicallyCounted(2.5, 10) cb ->
        u..addBonus(Bonus.LIFE, 50)
        ..addBonus(Bonus.DAMAGE, 15)
        ..setMoveSpeed(u.getMoveSpeed() - 34.5)
        ..setScale(2 - 0.1 * cb.getCount())

  function summonWisps()
    for i = 0 to GetRandomInt(2, 3)
      let u = new Creep(WISP_ID, WISP_SPAWN_POINTS[i].toVec3(), angle(0)).actor
      u.issueTargetOrder(WISP_HEAL_DEF.getOrderString(), actor)

  function entangleRoots()
    for i = 0 to 3
      let target = heroUnitList..shuffle().getFirst()
      let projectile = new Projectile(ROOTS_PROJECTILES_SPAWN_POINTS[i].toVec3(), 60, ENEMY_PLAYER, ROOTS_PROJECTILES_SPAWN_POINTS[i].toVec3().angleTo2d(target.getPos()), Abilities.chimaeraAcidMissile)

      projectile
      ..setRanged(5000)
      ..setTarget(target.getPos3Zero(), 18.)
      .onHit() hitTarget ->
        if hitTarget.getOwner().isEnemyOf(ENEMY_PLAYER) and hitTarget.isAlive()
          InstantDummyCaster.castTarget(ENEMY_PLAYER, ROOTS_ID, 1, OrderIds.entanglingroots, hitTarget)
          new DummyDamage()
          ..attacker(ENEMY_PLAYER)
          ..target(target)
          ..amount(250)
          ..attackType(ATTACK_TYPE_CHAOS)
          ..apply(true)
          projectile.terminate()

init
  EventListener.onTargetCast(WISP_HEAL_ID) (unit caster, unit target) ->
    target.setHP(target.getHP() + target.getMaxHP() * 0.15)
    target.addBonus(Bonus.DAMAGE, 15)
    flashEffect(Abilities.healTarget, target.getPos())
    caster.kill()

@compiletime function genAbility()
  new UnitDefinition(GOD_OF_NATURE_ID, UnitIds.keeperofthegrove)
  ..setAcquisitionRange(99999)
  ..setName("God of Nature")
  ..setAttack1DamageBase(100)
  ..setDefenseBase(15)
  ..setHitPointsMaximumBase(42500)
  ..setScalingValue(2.6)
  ..setArmorType(ArmorType.Divine)
  ..setAttack1AttackType(AttackType.Chaos)

  new UnitDefinition(WISP_ID, UnitIds.wisp)
  ..setHitPointsMaximumBase(600)
  ..setArmorType(ArmorType.Unarmored)
  ..setSpeedBase(110)
  ..setMovementType(MovementType.Fly)
  ..setNormalAbilities(WISP_HEAL_ID.toRawCode())
  ..setArmorType(ArmorType.Small)
  ..setAttack1AttackType(AttackType.Siege)

  new UnitDefinition(TREANT_ID, UnitIds.forceofnature)
  ..setAcquisitionRange(99999)
  ..setAttack1DamageBase(20)
  ..setDefenseBase(0)
  ..setSpeedBase(350)
  ..setHitPointsMaximumBase(500)
  ..setArmorType(ArmorType.Small)
  ..setAttack1AttackType(AttackType.Siege)

  new AbilityDefinitionKeeperoftheGroveEntanglingRoots(ROOTS_ID)
  ..setDummyAbility()
  ..setLevels(1)
  ..setDurationHero(1, 3)
  ..setDurationNormal(1, 3)
