package WaveController
import public Wave
import TimerUtils
import Creep
import Funcs
import Boss

public constant waveController = new WaveController()

constant SPAWN_TIME = 27.

class WaveController
  constant waves = new LinkedList<Wave>

  Function onAllWavesFinished

  Wave currentWave = null

  function addWaves(LinkedList<Wave> waves)
    this.waves.addAll(waves.copy())

  function startWaveSpawn()
    waveSpawn()
      
  function waveSpawn()
    if waves.isEmpty()
      onAllWavesFinished.execute()
      return

    let tim = getTimer()
    let tdialog = tim.createTimerDialog()
    ..setTitle("Time until next wave:")
    ..display(true)
    tim.doAfter(SPAWN_TIME) ->
      tdialog.destr()

      currentWave = waves.dequeue()
      currentWave.spawn()

  function checkIfCurrentWaveDone()
    if currentWave != null and currentWave.isDone
      currentWave.finish()
      currentWave = null
      waveSpawn()

init 
  nullTimer() ->
    onAllCreepsDead = () -> waveController.checkIfCurrentWaveDone()
