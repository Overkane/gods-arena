package PondWaves
import UnitIds
import Wave
import DamageSystem
import UnitIndexer
import PassiveAbilityPreset
import ClosureEvents
import Creep

public constant pondWaves = new LinkedList<Wave>
..add(compiletime(murguls()))
..add(compiletime(hydras()))
..add(compiletime(seaTurtles()))
..add(compiletime(seaGiants()))
..add(compiletime(lobstrokks()))
..add(compiletime(jungleStalkers()))
..add(compiletime(seaRevenants()))
..add(compiletime(godOfWater()))

constant MURGUL_SLOW = compiletime(ABIL_ID_GEN.next())
constant MURGUL_HEALING_WAVE = compiletime(ABIL_ID_GEN.next())
constant MURGUL_HEX = compiletime(ABIL_ID_GEN.next())
constant MURGUL_CURSE = compiletime(ABIL_ID_GEN.next())
constant MURGUL_COMMAND_AURA = compiletime(ABIL_ID_GEN.next())

constant HYDRA_POISON_ATTACK = compiletime(ABIL_ID_GEN.next())
constant HYDRA_STOMP = compiletime(ABIL_ID_GEN.next())
constant HYDRA_FAERIE_FIRE = compiletime(ABIL_ID_GEN.next())
constant HYDRA_SPAWN = compiletime(ABIL_ID_GEN.next())
constant HYDRA1_ID = compiletime(UNIT_ID_GEN.next())
constant HYDRA2_ID = compiletime(UNIT_ID_GEN.next())
constant HYDRA3_ID = compiletime(UNIT_ID_GEN.next())

constant SEA_TURTLE_MAGIC_DAMAGE_RETURN = compiletime(ABIL_ID_GEN.next())
constant SEA_TURTLE_PHYSICAL_DAMAGE_RETURN = compiletime(ABIL_ID_GEN.next())
constant SEA_TURTLE_BOTH_DAMAGE_RETURN = compiletime(ABIL_ID_GEN.next())
int array unitsBothDamageReturnThreshholds

constant SEA_GIANT_STOMP = compiletime(ABIL_ID_GEN.next())
constant SEA_GIANT_PULVERIZE = compiletime(ABIL_ID_GEN.next())

constant LOBSTROKK_HEALING_WAVE = compiletime(ABIL_ID_GEN.next())
constant LOBSTROKK_CLEAVE = compiletime(ABIL_ID_GEN.next())
constant LOBSTROKK_NATURE_WRATH = compiletime(ABIL_ID_GEN.next())
constant LOBSTROKK_ENDURANCE_AURA = compiletime(ABIL_ID_GEN.next())
constant LOBSTROKK_DEVOTION_AURA = compiletime(ABIL_ID_GEN.next())

constant JUNGLE_STALKER_STOMP = compiletime(ABIL_ID_GEN.next())
constant JUNGLE_STALKER_PULVERIZE = compiletime(ABIL_ID_GEN.next())
constant JUNGLE_STALKER_INVIS = compiletime(ABIL_ID_GEN.next())

constant SEA_REVENANT_CRUSHING_WAVE_WEAK = compiletime(ABIL_ID_GEN.next())
constant SEA_REVENANT_CRUSHING_WAVE_STRONG = compiletime(ABIL_ID_GEN.next())
constant SEA_REVENANT_MANA_SHIELD = compiletime(ABIL_ID_GEN.next())
constant SEA_REVENANT_PULVERIZE = compiletime(ABIL_ID_GEN.next())


function murguls() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..creep(UnitIds.murgulcliffrunner)
  ..hp(2200)
  ..armor(4)
  ..damage(38)
  ..amount(10)

  ..creep(UnitIds.murgulbloodgill)
  ..hp(1600)
  ..armor(2)
  ..mana(600)
  ..damage(30)
  ..amount(3)
  ..abilities(commaList(MURGUL_HEALING_WAVE))

  ..creep(UnitIds.murgulsnarecaster)
  ..hp(1750)
  ..armor(3)
  ..mana(400)
  ..damage(45)
  ..amount(5)
  ..abilities(commaList(MURGUL_SLOW))

  ..wait(20)

  ..creep(UnitIds.murgultidewarrior)
  ..hp(2600)
  ..armor(5)
  ..damage(62)
  ..amount(8)
  ..scale(1.5)

  ..creep(UnitIds.murgulbloodgill)
  ..hp(1600)
  ..armor(2)
  ..mana(600)
  ..damage(30)
  ..amount(2)
  ..abilities(commaList(MURGUL_HEALING_WAVE))

  ..elite(UnitIds.murgulshadowcaster)
  ..hp(8500)
  ..armor(3)
  ..mana(1400)
  ..damage(85)
  ..amount(1)
  ..scale(2)
  ..abilities(commaList(MURGUL_HEALING_WAVE, MURGUL_CURSE, MURGUL_SLOW))

  ..elite(UnitIds.murgulreaver)
  ..hp(12500)
  ..armor(8)
  ..damage(150)
  ..amount(1)
  ..scale(2)
  ..abilities(commaList(MURGUL_COMMAND_AURA))

  .build()

function hydras() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..elite(UnitIds.ancienthydra)
  ..hp(14000)
  ..armor(10)
  ..mana(600)
  ..damage(200)
  ..amount(1)
  ..abilities(commaList(HYDRA_POISON_ATTACK, HYDRA_STOMP, HYDRA_SPAWN))

  .build()

function seaTurtles() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..creep(UnitIds.seaturtlehatchling)
  ..hp(3500)
  ..armor(6)
  ..damage(60)
  ..amount(12)
  ..abilities("")

  ..creep(UnitIds.seaturtle)
  ..hp(4000)
  ..armor(8)
  ..damage(90)
  ..amount(6)
  ..abilities("")

  ..elite(UnitIds.gargantuanseaturtle)
  ..hp(12000)
  ..armor(12)
  ..damage(100)
  ..amount(1)
  ..rgb(255, 0, 0)
  ..abilities(commaList(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN))

  ..elite(UnitIds.gargantuanseaturtle)
  ..hp(12000)
  ..armor(4)
  ..damage(200)
  ..amount(1)
  ..rgb(0, 0, 255)
  ..abilities(commaList(SEA_TURTLE_MAGIC_DAMAGE_RETURN))

  ..wait(15)

  ..creep(UnitIds.giantseaturtle)
  ..hp(8000)
  ..armor(10)
  ..damage(120)
  ..amount(8)
  ..abilities("")

  ..elite(UnitIds.dragonturtle)
  ..hp(20000)
  ..armor(20)
  ..damage(250)
  ..attackrate(1)
  ..amount(1)
  ..rgb(255, 0, 0)
  ..abilities(commaList(SEA_TURTLE_BOTH_DAMAGE_RETURN, SEA_TURTLE_PHYSICAL_DAMAGE_RETURN))

  .build()

function seaGiants() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..creep(UnitIds.seagiant)
  ..hp(8000)
  ..armor(7)
  ..damage(85)
  ..amount(20)
  ..abilities(commaList(SEA_GIANT_PULVERIZE))

  ..creep(UnitIds.seagianthunter)
  ..hp(12000)
  ..armor(11)
  ..damage(150)
  ..amount(2)
  ..abilities(commaList(SEA_GIANT_PULVERIZE))

  ..wait(5)

  ..creep(UnitIds.seagiant)
  ..hp(8000)
  ..armor(7)
  ..damage(85)
  ..amount(20)
  ..abilities(commaList(SEA_GIANT_PULVERIZE))

  ..creep(UnitIds.seagianthunter)
  ..hp(12000)
  ..armor(11)
  ..damage(150)
  ..amount(2)
  ..abilities(commaList(SEA_GIANT_PULVERIZE))

  ..wait(10)

  ..creep(UnitIds.seagiant)
  ..hp(8000)
  ..armor(7)
  ..damage(85)
  ..amount(10)
  ..abilities(commaList(SEA_GIANT_PULVERIZE))

  ..elite(UnitIds.seagiantbehemoth)
  ..hp(22000)
  ..armor(15)
  ..mana(1000)
  ..damage(250)
  ..attackrate(0.9)
  ..amount(1)
  ..abilities(commaList(SEA_GIANT_PULVERIZE, SEA_GIANT_STOMP))

  .build()

function lobstrokks() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..creep(UnitIds.lobstrokkprawn)
  ..hp(6000)
  ..armor(5)
  ..damage(60)
  ..amount(15)

  ..creep(UnitIds.lobstrokktidecaller)
  ..hp(5500)
  ..armor(4)
  ..mana(600)
  ..damage(80)
  ..amount(4)
  ..abilities(commaList(LOBSTROKK_HEALING_WAVE))
  
  ..creep(UnitIds.lobstrokkpooldweller)
  ..hp(9500)
  ..armor(8)
  ..damage(130)
  ..amount(4)

  ..wait(12)

  ..elite(UnitIds.lobstrokkdeepseer)
  ..hp(14000)
  ..armor(10)
  ..mana(1000)
  ..damage(160)
  ..amount(1)
  ..abilities(commaList(LOBSTROKK_HEALING_WAVE, LOBSTROKK_NATURE_WRATH))

  ..elite(UnitIds.lobstrokksnapper)
  ..hp(16000)
  ..armor(15)
  ..damage(240)
  ..attackrate(0.8)
  ..amount(1)
  ..abilities(commaList(LOBSTROKK_CLEAVE))
  
  ..elite(UnitIds.lobstrokktidallord)
  ..hp(20000)
  ..armor(20)
  ..damage(350)
  ..attackrate(1.7)
  ..amount(1)
  ..abilities(commaList(LOBSTROKK_DEVOTION_AURA, LOBSTROKK_ENDURANCE_AURA))
  
  .build()

function jungleStalkers() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())
  
  ..creep(UnitIds.junglestalker)
  ..hp(12000)
  ..armor(8)
  ..damage(115)
  ..amount(10)
  ..abilities(commaList(JUNGLE_STALKER_INVIS))

  ..creep(UnitIds.elderjunglestalker)
  ..hp(16000)
  ..armor(11)
  ..damage(225)
  ..attackrate(0.85)
  ..amount(2)
  ..abilities(commaList(JUNGLE_STALKER_PULVERIZE, JUNGLE_STALKER_INVIS))
  
  ..elite(UnitIds.enrangedjunglestalker)
  ..hp(30000)
  ..armor(18)
  ..mana(1200)
  ..damage(300)
  ..attackrate(0.85)
  ..amount(1)
  ..abilities(commaList(JUNGLE_STALKER_PULVERIZE, JUNGLE_STALKER_STOMP, JUNGLE_STALKER_INVIS))

  ..wait(10)

  ..creep(UnitIds.junglestalker)
  ..hp(12000)
  ..armor(8)
  ..damage(115)
  ..amount(20)

  .build()

function seaRevenants() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())

  ..creep(UnitIds.revenantofthetides)
  ..hp(8000)
  ..armor(5)
  ..mana(2000)
  ..damage(150)
  ..amount(18)
  ..abilities(commaList(SEA_REVENANT_MANA_SHIELD))
  
  ..creep(UnitIds.revenantoftheseas)
  ..hp(12000)
  ..armor(7)
  ..mana(4000)
  ..damage(200)
  ..amount(6)
  ..abilities(commaList(SEA_REVENANT_MANA_SHIELD, SEA_REVENANT_CRUSHING_WAVE_WEAK))

  ..creep(UnitIds.revenantofthedepths)
  ..hp(17000)
  ..armor(14)
  ..mana(6000)
  ..damage(280)
  ..amount(2)
  ..abilities(commaList(SEA_REVENANT_MANA_SHIELD, SEA_REVENANT_CRUSHING_WAVE_WEAK))

  ..wait(5)

  ..elite(UnitIds.deeplordrevenant)
  ..hp(25000)
  ..armor(16)
  ..mana(10000)
  ..damage(360)
  ..attackrate(0.95)
  ..amount(1)
  ..abilities(commaList(SEA_REVENANT_MANA_SHIELD, SEA_REVENANT_CRUSHING_WAVE_STRONG, SEA_REVENANT_PULVERIZE))

  .build()

function godOfWater() returns Wave
  return new WaveBuilder()
  ..expBounty(waveExpList.dequeue())
  ..goldBounty(waveGoldList.dequeue())
  ..boss()
  .build()


@compiletime function gen()
  new AbilityDefinitionSlow(MURGUL_SLOW)
  ..setAttackSpeedFactor(1, 0.2)
  ..setMovementSpeedFactor(1, 0.4)
  ..setManaCost(1, 80)
  ..setCooldown(1, 15)
  ..setDurationNormal(1, 8)
  ..setDurationHero(1, 8)

  new AbilityDefinitionHealingWaveCreep(MURGUL_HEALING_WAVE)
  ..setDamageReductionperTarget(1, 0.25)
  ..setDamageperTarget(1, 500)
  ..setNumberofTargetsHit(1, 3)
  ..setManaCost(1, 100)
  ..setCooldown(1, 20)

  new AbilityDefinitionCursecreep(MURGUL_CURSE)
  ..setChancetoMiss(1, 0.4)
  ..setManaCost(1, 75)
  ..setCooldown(1, 12)
  ..setDurationNormal(1, 8)
  ..setDurationHero(1, 8)

  new AbilityDefinitionHexCreep(MURGUL_HEX)
  ..setManaCost(1, 125)
  ..setCooldown(1, 20)
  ..setDurationNormal(1, 2.5)
  ..setDurationHero(1, 2.5)

  new AbilityDefinitionAuraCommandCreep(MURGUL_COMMAND_AURA)
  ..setAttackDamageIncrease(1, 0.4)


  new AbilityDefinitionSlowPoison(HYDRA_POISON_ATTACK)
  ..setAttackSpeedFactor(1, 0)
  ..setMovementSpeedFactor(1, 0.25)
  ..setDamagePerSecond(1, 10)
  ..setDurationNormal(1, 3)
  ..setDurationHero(1, 3)

  new AbilityDefinitionFaerieFirecreep(HYDRA_FAERIE_FIRE)
  ..setDefenseReduction(1, 8)
  ..setManaCost(1, 75)
  ..setCooldown(1, 15)
  ..setDurationNormal(1, 8)
  ..setDurationHero(1, 8)

  new AbilityDefinitionWarStomphydra(HYDRA_STOMP)
  ..setDamage(1, 300)
  ..setManaCost(1, 100)
  ..setCooldown(1, 14)
  ..setDurationNormal(1, 3)
  ..setDurationHero(1, 3)

  new PassiveAbilityPreset(HYDRA_SPAWN, 1)

  new UnitDefinition(HYDRA1_ID, UnitIds.elderhydra)
  ..setNormalAbilities(commaList(HYDRA_POISON_ATTACK, HYDRA_FAERIE_FIRE, HYDRA_SPAWN))
  ..setAcquisitionRange(99999)
  ..setAttack1DamageBase(79)
  ..setDefenseBase(8)
  ..setHitPointsMaximumBase(7000)
  ..setManaMaximum(400)
  ..setManaInitialAmount(400)
  ..setArmorType(ArmorType.Small)
  ..setAttack1AttackType(AttackType.Siege)
  
  new UnitDefinition(HYDRA2_ID, UnitIds.hydra)
  ..setNormalAbilities(commaList(HYDRA_POISON_ATTACK, HYDRA_SPAWN))
  ..setAcquisitionRange(99999)
  ..setAttack1DamageBase(69)
  ..setDefenseBase(6)
  ..setHitPointsMaximumBase(5000)
  ..setArmorType(ArmorType.Small)
  ..setAttack1AttackType(AttackType.Siege)

  new UnitDefinition(HYDRA3_ID, UnitIds.hydrahatchling)
  ..setNormalAbilities(commaList(HYDRA_POISON_ATTACK))
  ..setAcquisitionRange(99999)
  ..setAttack1DamageBase(59)
  ..setDefenseBase(4)
  ..setHitPointsMaximumBase(3000)
  ..setArmorType(ArmorType.Small)
  ..setAttack1AttackType(AttackType.Siege)


  new PassiveAbilityPreset(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN, 1)
  new PassiveAbilityPreset(SEA_TURTLE_MAGIC_DAMAGE_RETURN, 1)
  new PassiveAbilityPreset(SEA_TURTLE_BOTH_DAMAGE_RETURN, 1)


  new AbilityDefinitionPulverizecreep(SEA_GIANT_PULVERIZE)
  ..setChancetoStomp(1, 30)
  ..setDamageDealt(1, 200)
  ..setFullDamageRadius(1, 150)
  ..setHalfDamageRadius(1, 300)

  new AbilityDefinitionWarStompseagiant(SEA_GIANT_STOMP)
  ..setDamage(1, 350)
  ..setManaCost(1, 125)
  ..setCooldown(1, 12)
  ..setDurationNormal(1, 3)
  ..setDurationHero(1, 3)


  new AbilityDefinitionHealingWaveCreep(LOBSTROKK_HEALING_WAVE)
  ..setDamageReductionperTarget(1, 0.25)
  ..setDamageperTarget(1, 1500)
  ..setNumberofTargetsHit(1, 3)
  ..setManaCost(1, 100)
  ..setCooldown(1, 20)

  new AbilityDefinitionEntanglingSeaweed(LOBSTROKK_NATURE_WRATH)
  ..setDamageperSecond(1, 125)
  ..setManaCost(1, 150)
  ..setCooldown(1, 15)
  ..setDurationNormal(1, 4)
  ..setDurationHero(1, 4)

  new AbilityDefinitionPitLordCleavingAttack(LOBSTROKK_CLEAVE)
  ..setDistributedDamageFactor(1, 0.4)
  ..setCheckDependencies(false)
  ..setHeroAbility(false)

  new AbilityDefinitionAuraDevotionCreep(LOBSTROKK_DEVOTION_AURA)
  ..setArmorBonus(1, 20)

  new AbilityDefinitionAuraEnduranceCreep(LOBSTROKK_ENDURANCE_AURA)
  ..setAttackSpeedIncrease(1, 0.20)
  ..setMovementSpeedIncrease(1, 0.20)


  new AbilityDefinitionPulverizecreep(JUNGLE_STALKER_PULVERIZE)
  ..setChancetoStomp(1, 30)
  ..setDamageDealt(1, 150)
  ..setFullDamageRadius(1, 150)
  ..setHalfDamageRadius(1, 300)

  new AbilityDefinitionWarStompseagiant(JUNGLE_STALKER_STOMP)
  ..setDamage(1, 500)
  ..setManaCost(1, 150)
  ..setCooldown(1, 14)
  ..setDurationNormal(1, 3)
  ..setDurationHero(1, 3)
  
  new AbilityDefinitionPermanentInvisibility(JUNGLE_STALKER_INVIS)
  ..setDurationNormal(1, 3)


  new AbilityDefinitionCrushingWave(SEA_REVENANT_CRUSHING_WAVE_WEAK)
  ..setDamage(1, 200)
  ..setMaxDamage(1, 1000)
  ..setManaCost(1, 100)
  ..setCooldown(1, 16)

  new AbilityDefinitionCrushingWave(SEA_REVENANT_CRUSHING_WAVE_STRONG)
  ..setDamage(1, 400)
  ..setMaxDamage(1, 1000)
  ..setManaCost(1, 100)
  ..setCooldown(1, 16)

  new AbilityDefinitionManaShieldCreep(SEA_REVENANT_MANA_SHIELD)
  ..setDamageAbsorbed(1, 2)
  ..setManaperHitPoint(1, 1)
  ..setManaCost(1, 50)
  ..setCooldown(1, 15)

  new AbilityDefinitionPulverizecreep(SEA_REVENANT_PULVERIZE)
  ..setChancetoStomp(1, 30)
  ..setDamageDealt(1, 200)
  ..setFullDamageRadius(1, 150)
  ..setHalfDamageRadius(1, 300)


init
  EventListener.add(EVENT_PLAYER_UNIT_DEATH) -> 
    let deadUnit = EventData.getTriggerUnit()

    if deadUnit.hasAbility(HYDRA_SPAWN)
      if deadUnit.getTypeId() == HYDRA1_ID
        for i = 0 to 2
          new Creep(HYDRA2_ID, deadUnit.getPos().withTerrainZ(), GetRandomReal(1, 360).asAngleDegrees())
      else if deadUnit.getTypeId() == HYDRA2_ID
        for i = 0 to 4
          new Creep(HYDRA3_ID, deadUnit.getPos().withTerrainZ(), GetRandomReal(1, 360).asAngleDegrees())
      else // Original Hydra
        for i = 0 to 2
          new Creep(HYDRA1_ID, deadUnit.getPos().withTerrainZ(), GetRandomReal(1, 360).asAngleDegrees())
    

  DamageEvent.addListener() -> 
    let sunit = DamageEvent.getSource()
    let tunit = DamageEvent.getTarget()
    
    if isPhysicalDamage() and tunit.hasAbility(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN)
      and not tunit.isIllusion() and sunit.isEnemyOf(tunit)

      tunit.dealPhysicalDamage(sunit, DamageEvent.getAmount() * 0.65)
    
    else if isMagicalDamage() and tunit.hasAbility(SEA_TURTLE_MAGIC_DAMAGE_RETURN)
      and not tunit.isIllusion() and sunit.isEnemyOf(tunit)

      tunit.dealMagicalDamage(sunit, DamageEvent.getAmount() * 0.65)
    
    // Each 10 attacks sea turtle swaps type of damage return ability.
    if tunit.hasAbility(SEA_TURTLE_BOTH_DAMAGE_RETURN)
      let id = tunit.getIndex()

      if unitsBothDamageReturnThreshholds[id] == 10
        if tunit.hasAbility(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN)
          tunit
          ..removeAbility(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN)
          ..addAbility(SEA_TURTLE_MAGIC_DAMAGE_RETURN)
          ..setVertexColor(color(0, 0, 255))
        else if tunit.hasAbility(SEA_TURTLE_MAGIC_DAMAGE_RETURN)
          tunit
          ..removeAbility(SEA_TURTLE_MAGIC_DAMAGE_RETURN)
          ..addAbility(SEA_TURTLE_PHYSICAL_DAMAGE_RETURN)
          ..setVertexColor(color(255, 0, 0))
        unitsBothDamageReturnThreshholds[id] = 0
      else 
        unitsBothDamageReturnThreshholds[id] = unitsBothDamageReturnThreshholds[id] + 1

  onUnitDeindex() ->
    unitsBothDamageReturnThreshholds[getIndexingUnit().getIndex()] = 0