package Arena
import WaveController
import Funcs
import LinkedListModule
import SoundUtils
import PlayerData
import Abilities
import AttachmentPoints
import ClosureForGroups
import CurrentArena
import SaveLoadSystem

constant LAST_WAVE_COMPLETED = new SoundDefinition(Sounds.credits)


public class Arena
  use LinkedListModule

  var name = ""
  Vec2Function spawnPoint
  var waves = new LinkedList<Wave>
  rect arenaRect
  rect heroSpawn
  fogmodifier modifier

  construct(string name, rect arenaRect, rect heroSpawn)
    this.name = name
    this.heroSpawn = heroSpawn
    this.arenaRect = arenaRect

  function setSpawnPoint(Vec2Function f)
    this.spawnPoint = f

  function setWaves(LinkedList<Wave> waves)
    for wave in waves
      wave.spawnPoint = this.spawnPoint
      wave.revivePoint = () -> heroSpawn.getCenter()
      this.waves.add(wave)

  function start(boolean isNext)
    currentArenaRect = this.arenaRect
    printTimed("|cffceac15>> Arena:|r " + name, 10.)
    pData.forEach() (player p, PlayerData playerData) ->
      modifier = createVision(p, arenaRect, true)..start()
      if isNext
        forUnitsOfPlayer(p) u ->
          u..setPos(heroSpawn.randomPoint()).addEffect(Abilities.massTeleportTarget, AttachmentPoints.origin).destr()

        playerData.getHero().ifPresent(h -> p.panCamToTimed(h.actor, 0))

    waveController.addWaves(waves)
    waveController.startWaveSpawn()
    waveController.onAllWavesFinished = () -> begin
      if this.next != null
        printTimed("|cffceac15>> Congratulations! You finished this arena! You will progress to the next one momentarily.", 10.)
        pData.forEach() (player p, PlayerData playerData) ->
          playerData.getHero().ifPresent(h -> h.actor
            ..setHP(h.actor.getMaxHP())
            ..setMana(h.actor.getMaxMana()))
        doAfter(7.5) ->
          modifier..stop()..destr()
          this.next.start(true)
      else
        LAST_WAVE_COMPLETED.play()
        printTimed("|cffceac15>> Congratulations! You finished the last arena!", 10.)
        savePlayerData()
    end