package CrabDefense
import AbilityTooltipGenerator
import GameConstants
import PassiveAbilityPreset
import UnitIds
import DamageEvent
import Orders
import BonusHandler
import TooltipFactory
import CustomStatSystem

public constant CRAB_DEFENSE_ID = compiletime(ABIL_ID_GEN.next())
public constant CRABLING_ID = compiletime(UNIT_ID_GEN.next())


init
  DamageEvent.addListener() -> 
    let target = DamageEvent.getTarget()
    let source = DamageEvent.getSource()

    if target.hasAbility(CRAB_DEFENSE_ID) and source.isEnemyOf(target)
      let chance = 0.25
      let rand = GetRandomReal(0, 1)
      if rand < chance
        createUnit(target.getOwner(), CRABLING_ID, target.getPos(), target.getPos().angleTo(target.getPos()))
        ..setAnimation("birth")
        ..issueTargetOrderById(OrderIds.attack, source)
        ..setTimedLife(7.5)
        ..addBonus(Bonus.DAMAGE, target.getStr(true) * 0.25 * (1 + target.getStat(CustomUnitStats.SPELL_POWER)))
        ..addAbility(LOCUST_ID)
        ..setXY(target.getPos())

@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator(Targettype.PASSIVE, "Has a chance to spawn a defensive |cffce951acrabling|r when attacked")
  new PassiveAbilityPreset(CRAB_DEFENSE_ID, NORMAL_SPELL_LEVELS, tooltip)
  ..presetIcon(Icons.pASBTNBerserk)
  ..registerTooltipGenerator(tooltip)
  ..presetButtonPosNormal(1, 1)
  ..presetButtonPosResearch(1, 0)
  ..presetHotkey("D")

  ..tooltipStartListen()
  ..setName("Crab Defense")
  ..addTooltipProperty("Chance to spawn", lvl -> (25).percRound())
  ..addTooltipProperty("Crab Damage", lvl -> "Strength * 0.25")
  ..tooltipStopListen()

  new UnitDefinition(CRABLING_ID, UnitIds.spidercrab)
  ..setScalingValue(0.45)
  ..setHitPointsMaximumBase(35)
  ..setAttack1Range(25)
  ..setAttack1CooldownTime(1)
  ..setAttack1DamageBase(2)
  ..setDeathTimeseconds(0.5)
  ..setCollisionSize(0.)
  ..setSpeedBase(400)

