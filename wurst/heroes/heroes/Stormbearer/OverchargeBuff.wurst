package OverchargeBuff
import PresetBuffs
import Assets
import SoundUtils
import CustomStatSystem
import TooltipFactory
import DummyCaster
import StunAbilityPreset
import ObjectIdGenerator
import AbilityObjEditing
import OrderIds

constant buffTuple1 = compiletime(createDummyBuffObject("Overcharge".color(POSITIVE_COLOR), "Spell Power is increased.",  Icons.bTNControlMagic))

public constant RealLevelClosure OVERCHARGE_STUN_DURATION = lvl -> 3.
constant OVERCHARGE_STUN_ID = compiletime(ABIL_ID_GEN.next())

public class OverchargeBuff extends NormalBuff
  constant ON_APPLY_SOUND = new SoundDefinition(Sounds.purgeTarget1)
  constant ON_END_SOUND = new SoundDefinition(Sounds.slowTarget1)
  constant bonusSP = 0.
  constant duration = 0.

  construct(real dur, real bonusSP)
    super(dur, buffTuple1)
    this.bonusSP = bonusSP
    this.duration = dur
    
  override function onApply()
    target.addStat(CustomUnitStats.SPELL_POWER, bonusSP)
    ON_APPLY_SOUND.playForPlayer(target.getOwner())

  override function onEnd()
    target.addStat(CustomUnitStats.SPELL_POWER, -bonusSP)
    new DummyCaster().castTarget(OVERCHARGE_STUN_ID, 1, OrderIds.thunderbolt, target)
    ON_END_SOUND.playForPlayer(target.getOwner())

@compiletime function genAbility()
  new StunAbilityPreset(OVERCHARGE_STUN_ID, 1)
  ..presetDurationNormal(OVERCHARGE_STUN_DURATION)
  ..presetDurationHero(OVERCHARGE_STUN_DURATION)