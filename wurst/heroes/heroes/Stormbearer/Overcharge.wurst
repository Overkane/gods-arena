package Overcharge
import AbilityTooltipGenerator
import ClosureEvents
import OverchargeBuff
import TooltipFactory
import GameConstants
import AbilityDefinitionExtension

public constant OVERCHARGE_ID = compiletime(ABIL_ID_GEN.next())

constant RealLevelClosure BONUS_SP = lvl -> 0.2 * lvl
constant RealLevelClosure DURATION = lvl -> 8


init 
  EventListener.onCast(OVERCHARGE_ID) (unit caster) ->
    let lvl = caster.getAbilityLevel(OVERCHARGE_ID)
    let additionalSP = BONUS_SP.run(lvl)
    let spellDuration = DURATION.run(lvl)
    
    new OverchargeBuff(spellDuration, additionalSP).apply(caster)


@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator("Hero overcharges himself to gain additional {0}. ".format("Spell Power".color(MAGICAL_COLOR))
    + "After overcharge duration ends, hero is stunned for a small duration.".color(IMPORTANT_COLOR))
  new ChannelAbilityPreset(OVERCHARGE_ID, INNATE_SPELL_LEVELS, true, tooltip)
  ..makeDAbility()
  ..presetIcon(Icons.bTNControlMagic)

  ..tooltipStartListen()
  ..presetTargetTypes(Targettype.NONE)
  ..setName("Overcharge")
  ..addTooltipProperty("Magic Damage Multiplier", lvl -> (BONUS_SP.run(lvl)*100).percRound())
  ..addTooltipProperty("Overcharge Duration", DURATION)
  ..addTooltipProperty("Stun Duration", lvl -> OVERCHARGE_STUN_DURATION.run(lvl).round())
  ..presetManaCost(lvl -> 25 + 25 * lvl)
  ..presetCooldown(lvl -> 35.)
  ..tooltipStopListen()

