package BubbleShield
import AbilityTooltipGenerator
import GameConstants
import ClosureEvents
import BubbleShieldBuff

public constant BUBBLE_SHIELD_ID = compiletime(ABIL_ID_GEN.next())

constant RealLevelClosure HP_HEAL = lvl -> 20. * lvl
constant RealLevelClosure SHIELD_DURABILITY = lvl -> 150. * lvl
constant RealLevelClosure DURATION = lvl -> 8. + (lvl/2).floor()

init
  EventListener.onTargetCast(BUBBLE_SHIELD_ID) (unit caster, unit target) ->
    let lvl = caster.getAbilityLevel(BUBBLE_SHIELD_ID)
    let healAmount = HP_HEAL.run(lvl) * BUFF_ANIM_PERIOD
    let shieldDurability = SHIELD_DURABILITY.run(lvl)
    let spellDuration = DURATION.run(lvl)
    
    new BubbleShieldBuff(caster, spellDuration, shieldDurability, healAmount).apply(target)

@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator("Applies a bubble shield to the target, which heals it and blocks some amount of damage. The effect ends when the shield is destroyed or the duration exceeded. If applied on water elemental, then doubles its base damage.")
  new ChannelAbilityPreset(BUBBLE_SHIELD_ID, NORMAL_SPELL_LEVELS, true, tooltip)
  ..presetIcon(Icons.bTNNeutralManaShield)
  ..presetButtonPosNormal(2, 2)
  ..presetButtonPosResearch(2, 0)
  ..presetHotkey("E")
  ..presetDurationHero(DURATION)
  ..presetDurationNormal(DURATION)
  ..presetTargetsAllowed(lvl -> commaList(TargetsAllowed.allies, TargetsAllowed.self, TargetsAllowed.friend))
  
  ..tooltipStartListen()
  ..presetTargetTypes(Targettype.UNIT)
  ..setName("Bubble Shield")
  ..addTooltipProperty("Heal per sec", HP_HEAL)
  ..addTooltipProperty("Shield Duratibility", SHIELD_DURABILITY)
  ..addTooltipProperty("Duration", DURATION)
  ..presetCastRange(lvl -> 600)
  ..presetManaCost(lvl -> 40 + 35 * lvl)
  ..presetCooldown(lvl -> 12. - lvl)
  ..tooltipStopListen()
  