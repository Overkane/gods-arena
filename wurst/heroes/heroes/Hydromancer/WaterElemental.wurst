package WaterElemental
import AbilityTooltipGenerator
import UnitIds
import GameConstants
import Entity
import AbilityDefinitionExtension
import SummonEntity

public constant WATER_ELEMENTAL_ID = compiletime(ABIL_ID_GEN.next())

constant ELEMENTAL_1 = compiletime(UNIT_ID_GEN.next())
constant ELEMENTAL_2 = compiletime(UNIT_ID_GEN.next())
constant ELEMENTAL_3 = compiletime(UNIT_ID_GEN.next())

public constant ELEM_LIST = new LinkedList<int>..add(ELEMENTAL_1, ELEMENTAL_2, ELEMENTAL_3)

constant IntLevelClosure MAX_SUMMON_COUNT = lvl -> 1 + lvl
constant IntLevelClosure ELEM_TYPE = lvl -> ELEM_LIST.get(lvl-1)


init
  EventListener.onCast(WATER_ELEMENTAL_ID) (unit caster) ->
    let lvl = caster.getAbilityLevel(WATER_ELEMENTAL_ID)
    let summonTypeId = ELEM_TYPE.run(lvl)
    let maxSummonCount = MAX_SUMMON_COUNT.run(lvl)

    if WaterElemental.SUMMON_GROUP.size() >= maxSummonCount
      WaterElemental.destroyExcessElemental()
      
    new WaterElemental(caster, summonTypeId, caster.getPos3Zero(), angle(GetRandomDirectionDeg()))


class WaterElemental extends SummonEntity
  static constant SUMMON_GROUP = new LinkedList<unit>

  static function destroyExcessElemental()
    SUMMON_GROUP..sortWith((unit u1, unit u2) -> (u1.getHP() - u2.getHP()).toInt())
    .dequeue().kill()

  construct(unit summoner, int typId, vec3 pos, angle ang)
    super(summoner, typId, pos, ang)
    SUMMON_GROUP.add(actor)


    EventListener.add(actor, EVENT_PLAYER_UNIT_DEATH) () ->
      SUMMON_GROUP.remove(actor)


@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator("Summons a |cff636cd0water elemental|r. Max amount depends on ability level. If max amount of elementals is reached, then on next spell cast the one with lowest HP will be killed.")
  new ChannelAbilityPreset(WATER_ELEMENTAL_ID, INNATE_SPELL_LEVELS, true, tooltip)
  ..makeDAbility()
  ..presetIcon(Icons.bTNSummonWaterElemental)
  
  ..tooltipStartListen()
  ..setName("Water Elemental")
  ..addTooltipProperty("Max Summon Count", MAX_SUMMON_COUNT)
  ..presetManaCost(lvl -> 50 + 75 * lvl)
  ..tooltipStopListen()

  ..presetCooldown(lvl -> 2)
  
  
  new UnitDefinition(ELEMENTAL_1, UnitIds.waterelemental1)
  ..setAttack1DamageBase(25)
  ..setAttack1Range(550)
  ..setDefenseBase(2)
  ..setHitPointsMaximumBase(350)
  ..setScalingValue(0.85)
  ..setAttack1AttackType(AttackType.Hero)
  ..setArmorType(ArmorType.Hero)

  new UnitDefinition(ELEMENTAL_2, UnitIds.waterelemental2)
  ..setAttack1DamageBase(50)
  ..setAttack1Range(600)
  ..setDefenseBase(6)
  ..setHitPointsMaximumBase(600)
  ..setScalingValue(0.925)
  ..setAttack1AttackType(AttackType.Hero)
  ..setArmorType(ArmorType.Hero)

  new UnitDefinition(ELEMENTAL_3, UnitIds.waterelemental3)
  ..setAttack1DamageBase(90)
  ..setAttack1Range(650)
  ..setHitPointsMaximumBase(9000)
  ..setDefenseBase(7)
  ..setArmorType(ArmorType.Hero)
  ..setScalingValue(1.0)
  ..setAttack1AttackType(AttackType.Hero)
  ..setArmorType(ArmorType.Hero)
  