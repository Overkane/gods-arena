package MeteorSpell
import Assets
import ClosureTimers
import ClosureForGroups
import AbilityTooltipGenerator
import GameConstants
import Entity
import DamageSystem

public constant METEOR_ABIL_ID = compiletime(ABIL_ID_GEN.next())
constant RealLevelClosure SPELL_DMG = lvl -> 125. + 100. * lvl
constant RealLevelClosure SPELL_AOE = lvl -> 250. + 25 * lvl

init
    EventListener.onPointCast(METEOR_ABIL_ID) (caster, spellTarget) ->
        let lvl = caster.getAbilityLevel(METEOR_ABIL_ID)
        let aoe = SPELL_AOE.run(lvl)
        flashEffect(Units.infernalBirth, spellTarget)
        doAfter(0.9) ->
            forUnitsInRange(spellTarget, aoe) (target) ->
                let eff = target.addEffect(Abilities.flameStrikeEmbers, AttachmentPoints.origin)
                doAfter(0.9) ->
                    eff.destr()
                if target.isEnemyOf(caster.getOwner()) and target.isAlive()
                    let knockBackDistance = 1 - target.getPos().distanceTo(spellTarget) / aoe
                    target.getEntity().addVel(ZERO3.polarProject(800 * ANIMATION_PERIOD * knockBackDistance, spellTarget.angleTo(target.getPos()), (27).fromDeg()))
                    caster.dealMagicalDamage(target, SPELL_DMG.run(lvl))
                    flashEffect(Abilities.incinerateBuff, target, "origin")

@compiletime
function genAbility()
    new ChannelAbilityPreset(METEOR_ABIL_ID, NORMAL_SPELL_LEVELS, true, new AbilityTooltipGenerator("A chunky meteor from the sky which crushes your enmies in a big area with over 9000Â° Celsius."))
    ..presetButtonPosNormal(0, 2)
    ..presetIcon(Icons.bTNInfernal)
    ..presetOption(Option.TARGETIMAGE, true)

    ..tooltipStartListen()
    ..addTooltipProperty("Damage Type", DamageTypeTooltips.magical)
    ..presetTargetTypes(Targettype.POINT)
    ..setName("Chaos Meteor")
    ..presetHotkey("Q")
    ..addTooltipProperty("Damage", SPELL_DMG)
    ..presetManaCost(lvl -> 160 + lvl * 50)
    ..presetAreaofEffect(SPELL_AOE)
    ..presetCooldown(lvl -> 29. - lvl)
    ..tooltipStopListen()
