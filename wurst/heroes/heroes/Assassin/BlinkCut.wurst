package BlinkCut
import Abilities
import ClosureForGroups
import AbilityTooltipGenerator
import UnitAnimations
import AttachmentPoints
import ClosureTimers
import ClosureEvents
import LinkedList
import GameConstants
import MapModels
import TooltipFactory
import DamageSystem
import AbilityDefinitionExtension

public constant BLINK_CUT_ID = compiletime(ABIL_ID_GEN.next())

RealLevelClosure NUMBER_OF_STRIKES = lvl -> 4. + 1. * (lvl-1)
RealLevelClosure DAMAGE_PER_STRIKE = lvl -> 70. + 50. * (lvl-1)
RealLevelClosure BONUS_AGILITY_DAMAGE = lvl -> 0.4 * lvl
RealLevelClosure BLINK_DISTANCE = lvl -> 600.

init 
  EventListener.onTargetCast(BLINK_CUT_ID) (unit caster, unit target) ->
    nullTimer() -> 
      let lvl = caster.getAbilityLevel(BLINK_CUT_ID)
      var numberOfStrikes = NUMBER_OF_STRIKES.run(lvl).toInt() - 1 
      let bonusAgilityDamage = BONUS_AGILITY_DAMAGE.run(lvl)
      let damagePerStrike = DAMAGE_PER_STRIKE.run(lvl) + bonusAgilityDamage * caster.getAgi(true)
      let blinkDistance = BLINK_DISTANCE.run(lvl)
      
      caster.setInvulnerable(true)
      caster.getOwner().clearSelection()

      caster.setPos(target.getPos())
      caster.setAnimation(UnitAnimations.HeroWarden.attack1.idx)
      caster.dealPhysicalDamage(target, damagePerStrike)
      flashEffect(Abilities.blinkCaster, caster.getPos())
      flashEffect(MapModels.ephemeralCutMidnight, target, AttachmentPoints.chest)

      doPeriodicallyCounted(0.3, numberOfStrikes) (CallbackCounted cb) ->
        let unitList = new LinkedList<unit>
        forUnitsInRange(caster.getPos(), blinkDistance) (unit u) ->
          if u.isAlive() and u.getOwner().isEnemyOf(caster.getOwner())
            unitList.add(u)  
        
        if not unitList.isEmpty()
          caster.getOwner().clearSelection()
          caster.setPos(unitList.getFirst().getPos())
          caster.setAnimation(UnitAnimations.HeroWarden.attack1.idx)
          caster.damageTarget(unitList.getFirst(), damagePerStrike)
          flashEffect(Abilities.blinkCaster, caster.getPos())
          flashEffect(MapModels.ephemeralCutMidnight, unitList.getFirst(), AttachmentPoints.chest)
          numberOfStrikes -= 1

          if numberOfStrikes == 0
            caster.setInvulnerable(false)
            caster.getOwner().select(caster)
        else 
          cb.stop()
          caster.setInvulnerable(false)
          caster.getOwner().select(caster)

        destroy unitList

@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator("Assasin blinks and strikes several enemies.")
  new ChannelAbilityPreset(BLINK_CUT_ID, NORMAL_SPELL_LEVELS, true, tooltip)
  ..makeQAbility()
  ..presetIcon(Icons.bTNBlink)
  ..presetTargetsAllowed(lvl -> TargetsAllowed.enemies)

  ..tooltipStartListen()
  ..addTooltipProperty("Damage Type", DamageTypeTooltips.physical)
  ..presetTargetTypes(Targettype.UNIT)
  ..setName("Blink Cut")
  ..addTooltipProperty("Number of Strikes", NUMBER_OF_STRIKES)
  ..addTooltipProperty("Damage per Strike", DAMAGE_PER_STRIKE)
  ..addTooltipProperty("Bonus Agility Damage", lvl -> (BONUS_AGILITY_DAMAGE.run(lvl) * 100).percRound())
  ..addTooltipProperty("Blink Distance", BLINK_DISTANCE)
  ..presetCastRange(BLINK_DISTANCE)
  ..presetManaCost(lvl -> 65 + 35 * (lvl-1))
  ..presetCooldown(lvl -> 17. - lvl)
  ..tooltipStopListen()
