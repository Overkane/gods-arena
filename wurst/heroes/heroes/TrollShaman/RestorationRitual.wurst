package RestorationRitual
import AbilityTooltipGenerator
import GameConstants
import ClosureEvents
import ClosureTimers
import ClosureForGroups
import RestorationRitualBuff
import TooltipFactory
import Abilities
import LinkedList
import GeneralFunctions
import AbilityDefinitionExtension

public constant RESTORATION_RITUAL_ID = compiletime(ABIL_ID_GEN.next())

constant RealLevelClosure PERC_HP = lvl -> 5. * lvl
constant RealLevelClosure PERC_MP = lvl -> 2.5 * lvl
constant RealLevelClosure DURATION = lvl -> 10.
constant RealLevelClosure AOE = lvl -> 650

constant castingUnits = new LinkedList<unit>


init
  EventListener.onCast(RESTORATION_RITUAL_ID) (unit caster) ->
    let lvl = caster.getAbilityLevel(RESTORATION_RITUAL_ID)
    let hpPercRestore = PERC_HP.run(lvl) * BUFF_ANIM_PERIOD / 100
    let mpPercRestore = PERC_MP.run(lvl) * BUFF_ANIM_PERIOD / 100
    let duration = DURATION.run(lvl)
    let aoe = AOE.run(lvl)

    castingUnits.add(caster)

    doPeriodicallyTimed(BUFF_ANIM_PERIOD, duration) (CallbackCounted cb) ->
      if castingUnits.has(caster)
        forUnitsInRange(caster.getPos(), aoe) (unit u) ->
          if u.isValidPlayerTarget() and u != caster
            new RestorationRitualBuff(caster, BUFF_ANIM_PERIOD, hpPercRestore, mpPercRestore).apply(u)
      else 
        cb.stop()

  EventListener.add(EVENT_PLAYER_UNIT_SPELL_ENDCAST) -> 
    if EventData.getSpellAbilityId() == RESTORATION_RITUAL_ID
      castingUnits.remove(EventData.getTriggerUnit())


@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator("Performs a ritual to restore allies hp and mp over time.")
  new ChannelAbilityPreset(RESTORATION_RITUAL_ID, ULTIMATE_SPELL_LEVELS, false, tooltip)
  ..makeRAbility()
  ..presetIcon(Icons.bTNBigBadVoodooSpell)
  ..setArtCaster(Abilities.voodooAura)
  ..presetOption(Option.VISIBLE, true)
  ..presetDisableOtherAbilities(lvl -> false)
  ..presetFollowThroughTime(DURATION)
  ..presetBaseOrderID(lvl -> "restorationRitual")
  
  ..tooltipStartListen()
  ..presetTargetTypes(Targettype.NONE)
  ..setName("Restoration Ritual")
  ..addTooltipProperty("Channeling", lvl -> "")
  ..addTooltipProperty("HP% Restore per sec", lvl -> PERC_HP.run(lvl).percRound())
  ..addTooltipProperty("MP% Restore per sec", lvl -> PERC_MP.run(lvl).percRound())
  ..addTooltipProperty("Duration", DURATION)
  ..presetAreaofEffect(AOE)
  ..presetManaCost(lvl -> 150 + 50 * lvl)
  ..presetCooldown(lvl -> 100)
  ..tooltipStopListen()
  
  ..presetDurationNormal(DURATION)
  ..presetDurationHero(DURATION)
