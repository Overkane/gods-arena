package BlackholeSpell
import Assets
import ClosureTimers
import ClosureForGroups
import AbilityTooltipGenerator
import GameConstants
import Entity
import DamageSystem
import Heightmap
import MapModels
import PhysicsProjectile
import AbilityDefinitionExtension

public constant BLACKHOLE_ABILITY_ID = compiletime(ABIL_ID_GEN.next())
constant RealLevelClosure SPELL_DMG = lvl -> 15. * lvl
constant RealLevelClosure SPELL_AOE = lvl -> 290. + lvl * 32
constant SPELL_FX = MapModels.blackhole
constant DAMAGE_INTERVAL = 0.6
constant SPELL_DURATION = 7.

init
    EventListener.onCast(BLACKHOLE_ABILITY_ID) caster ->
        let spellTarget = EventData.getSpellTargetPos()
        let lvl = caster.getAbilityLevel(BLACKHOLE_ABILITY_ID)
        let eff = addEffect(SPELL_FX, spellTarget.withHeightMap(48))..setScale(0)
        let aoe = SPELL_AOE.run(lvl)

        for i = 0 to 9
            new Shrapnel(spellTarget.withHeightMap(), Abilities.vengeanceMissile)
        
        doPeriodicallyCounted(0.05, 50) cb ->
            eff.setScale(eff.getScale().lerp(aoe / 200, 0.5))

        doAfter(0.3) ->
            doPeriodicallyCounted(DAMAGE_INTERVAL, (SPELL_DURATION / 0.6).toInt()) (CallbackCounted cb) ->
                forUnitsInRange(spellTarget, aoe) (target) ->
                    let entity = target.getEntity()
                    if target.isEnemyOf(caster.getOwner()) and target.isAlive() and entity != null and not entity.done and not entity.flying
                        if not target.isStrong()
                            target.getEntity().addVel(ZERO2.polarOffset(spellTarget.angleTo(target.getPos()), -300 * ANIMATION_PERIOD).toVec3())
                        caster.dealMagicalDamage(target, SPELL_DMG.run(lvl))


        doAfter(SPELL_DURATION) ->
            doPeriodicallyCounted(0.05, 50) cb ->
                eff.setScale(eff.getScale().lerp(0.0, 0.5))
                if cb.isLast()
                    eff.destr()

@compiletime
function genAbility()
    new ChannelAbilityPreset(BLACKHOLE_ABILITY_ID, NORMAL_SPELL_LEVELS, true, new AbilityTooltipGenerator("A black hole that sucks nearby enemies into its center, dealing damage."))
    ..makeWAbility()
    ..presetIcon(Icons.bTNDeathAndDecay)
    ..presetOption(Option.TARGETIMAGE, true)

    ..tooltipStartListen()
    ..addTooltipProperty("Damage Type", DamageTypeTooltips.magical)
    ..presetTargetTypes(Targettype.POINT)
    ..setName("Black Hole")
    ..addTooltipProperty("Damage", SPELL_DMG)
    ..addTooltipProperty("Damage Inverval", lvl -> DAMAGE_INTERVAL.round())
    ..addTooltipProperty("Duration", lvl -> SPELL_DURATION)
    ..presetAreaofEffect(SPELL_AOE)
    ..presetManaCost(lvl -> 110 + 45 * (lvl-1))
    ..presetCooldown(lvl -> 22.)
    ..tooltipStopListen()

@test
function f()
    let z = ZERO3.polarProject(10, 0 .fromDeg(), 45 .fromDeg())
    print(z.toString())