package ArmorCut
import AbilityTooltipGenerator
import GameConstants
import TooltipFactory
import public ArmorCutBuff
import PassiveAbilityPreset
import DamageEvent
import AbilityDefinitionExtension

public constant ARMOR_CUT_ID = compiletime(ABIL_ID_GEN.next())

public constant RealLevelClosure ARMOR_CUT_ARMOR_REDUCE = lvl -> 1. + lvl
public constant RealLevelClosure ARMOR_CUT_DURATION = lvl -> 20.
constant RealLevelClosure ARMOR_CUT_CHANCE = lvl -> 10. + 5. * lvl
constant ARMOR_CUT_MAX_STACKS_AMOUNT = 8


init
  ArmorCutBuff.setMaxBuffAmount(ARMOR_CUT_MAX_STACKS_AMOUNT)

  DamageEvent.addListener() -> 
    let sunit = DamageEvent.getSource()
    if sunit.hasAbility(ARMOR_CUT_ID) and DamageEvent.getType() == DamageType.ATTACK 
      let lvl = sunit.getAbilityLevel(ARMOR_CUT_ID)
      let chance = ARMOR_CUT_CHANCE.run(lvl)

      if chance >= GetRandomInt(1, 100)
        let tunit = DamageEvent.getTarget()
        let armorReduction = ARMOR_CUT_ARMOR_REDUCE.run(lvl)
        let duration = ARMOR_CUT_DURATION.run(lvl)

        new ArmorCutBuff(duration, armorReduction).apply(tunit)


@compiletime function genAbility()
  let tooltip = new AbilityTooltipGenerator(Targettype.PASSIVE, "Cuts enemy armor, reducing their armor for a duration. Stacks.")
  new PassiveAbilityPreset(ARMOR_CUT_ID, INNATE_SPELL_LEVELS, tooltip)
  ..registerTooltipGenerator(tooltip)
  ..makeDAbility()
  ..presetIcon(Icons.pASBTNCriticalStrike)
  
  ..tooltipStartListen()
  ..setName("Armor Cut")
  ..addTooltipProperty("Armor Reduction Chance", lvl -> ARMOR_CUT_CHANCE.run(lvl).percRound())
  ..addTooltipProperty("Armor Reduction", ARMOR_CUT_ARMOR_REDUCE)
  ..addTooltipProperty("Duration", ARMOR_CUT_DURATION)
  ..addTooltipProperty("Max Stacks Amount", lvl -> ARMOR_CUT_MAX_STACKS_AMOUNT)
  ..tooltipStopListen()
