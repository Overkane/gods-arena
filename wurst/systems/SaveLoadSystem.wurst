package SaveLoadSystem
import GameConstants
import PlayerData
import SaveLoadData
import SLCrypto
import HashMap
import GameStatus

constant FILE_NAME = "Gods' Arena/{0}/PlayerData"

constant loadedPlayerHonorPoints = new HashMap<player, int>

public function loadPlayerData()
  pData.forEach() (player p, PlayerData playerData) ->
    p.loadData(FILE_NAME.format(p.getName())) (status, data) ->
      if status == LoadStatus.SUCCESS
        let honorPointsString = sl_decrypt(data.getUnsafeString())
        let honorPointsInt = honorPointsString.toInt()

        if honorPointsInt != 0
          p..print("You successfully loaded {0} honor {1}.".format(
            honorPointsString, 
            honorPointsInt == 1 ? "point" : "points"
          ), 5)
          ..addLumber(honorPointsInt)

        loadedPlayerHonorPoints.put(p, honorPointsInt)
      else if gameStatus != GameStatus.REPLAY
        let fileName = FILE_NAME.format(p.getName())

        p..print("Save file is not found. New one is created.", 5)
        ..saveData(fileName, sl_encrypt("0"))

        loadedPlayerHonorPoints.put(p, 0)

public function savePlayerData()
  if gameStatus == GameStatus.REPLAY
    return

  if not allowSave
    print("You can't save in single player.", 5)
    return
  
  pData.forEach() (player p, PlayerData playerData) ->
    let arenaPoints = pData.get(p).getArenaPoints()

    if arenaPoints >= ARENA_POINTS_THRESHOLD
      let earnedHonorPoints = (arenaPoints / ARENA_POINTS_THRESHOLD).floor()
      let loadedHonorPoints = loadedPlayerHonorPoints.get(p)
      
      if loadedHonorPoints >= earnedHonorPoints
        p.print("You earned {0} honor {1}. Save file has {2} honor points. Saving is aborted.".format(
          earnedHonorPoints.toString(),
          earnedHonorPoints == 1 ? "point" : "points",
          loadedHonorPoints.toString()
        ), 5)
      else
        let fileName = FILE_NAME.format(p.getName())

        p..print("You successfully saved {0} honor {1}.".format(
            earnedHonorPoints.toString(), 
            earnedHonorPoints == 1 ? "point" : "points"
        ), 5)
        ..saveData(fileName, sl_encrypt(earnedHonorPoints.toString()))
        
    else 
      p.print("You don't have honor points to save.", 5)
