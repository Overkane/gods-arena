package Backpack
import ObjectIdGenerator
import HeroPreset
import ClosureTimers
import Icons
import UnitIds
import AbilityIds
import PlayerData
import Entity

constant BACKPACK_ID = compiletime(HERO_ID_GEN.next())

public constant backpackUnits = new LinkedList<unit>

init
  doPeriodically(1) (CallbackPeriodic cb) ->
    updateBackpackPos()

function updateBackpackPos()
  for backpack in backpackUnits
    let heroUnit = pData.get(backpack.getOwner()).getHero().hero.actor
    if heroUnit.isAlive()
      backpack.setPos(heroUnit.getPos())

public class Backpack extends UnitEntity
  constant unit unitOwner

  construct(player p, unit hero)
    super(createUnit(p, BACKPACK_ID, vec2(0, 0), angle(0)))
    backpackUnits.add(actor)
    unitOwner = hero

  ondestroy
    backpackUnits.remove(actor)

@compiletime function gen()
  new HeroPreset(BACKPACK_ID, UnitIds.circleofpower, "Backpack")
  ..addProperName("Backpack")
  ..setIconGameInterface(Icons.bTNPackBeast)
  ..hideHeroDeathMsg(true)
  ..hideHeroMinimapDisplay(true)
  ..setHideMinimapDisplay(true)
  ..addNormalAbility(AbilityIds.invulnerable)
  ..setArmorType(ArmorType.Hero)
  ..setModelFile("")
  ..setScalingValue(0.)
  ..setSelectionScale(0)
  ..setCollisionSize(0.)
  ..setSightRadiusDay(0)
  ..setSightRadiusNight(0)
  ..setIsaBuilding(false)
  ..buildHero()